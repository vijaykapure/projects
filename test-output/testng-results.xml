<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-14T12:38:37 IST" name="Suite" finished-at="2024-11-14T12:39:36 IST" duration-ms="59395">
    <groups>
    </groups>
    <test started-at="2024-11-14T12:38:37 IST" name="Test" finished-at="2024-11-14T12:39:36 IST" duration-ms="59395">
      <class name="sampletest.basic3">
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:37 IST" name="setup" finished-at="2024-11-14T12:38:43 IST" duration-ms="6358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Varifylogo()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:44 IST" name="Varifylogo" finished-at="2024-11-14T12:38:44 IST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Varifylogo -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:44 IST" name="teardown" finished-at="2024-11-14T12:38:44 IST" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Varifylogo status=SUCCESS method=basic3.Varifylogo()[pri:0, instance:sampletest.basic3@9ebe38b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:44 IST" name="setup" finished-at="2024-11-14T12:38:48 IST" duration-ms="3377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Varifytitle()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:48 IST" name="Varifytitle" finished-at="2024-11-14T12:38:48 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Varifytitle -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:48 IST" name="teardown" finished-at="2024-11-14T12:38:48 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Varifytitle status=SUCCESS method=basic3.Varifytitle()[pri:0, instance:sampletest.basic3@9ebe38b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:48 IST" name="setup" finished-at="2024-11-14T12:38:50 IST" duration-ms="2030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="failtest()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:50 IST" name="failtest" finished-at="2024-11-14T12:38:50 IST" duration-ms="22" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at sampletest.basic3.failtest(basic3.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failtest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:50 IST" name="teardown" finished-at="2024-11-14T12:38:50 IST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failtest status=FAILURE method=basic3.failtest()[pri:0, instance:sampletest.basic3@9ebe38b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:50 IST" name="setup" finished-at="2024-11-14T12:38:52 IST" duration-ms="1889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:38:52 IST" name="login" finished-at="2024-11-14T12:39:09 IST" duration-ms="17204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:39:09 IST" name="teardown" finished-at="2024-11-14T12:39:10 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=basic3.login()[pri:0, instance:sampletest.basic3@9ebe38b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:39:10 IST" name="setup" finished-at="2024-11-14T12:39:12 IST" duration-ms="2345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="skiptest()[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:39:12 IST" name="skiptest" finished-at="2024-11-14T12:39:12 IST" duration-ms="4" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skip this test case]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skip this test case
at sampletest.basic3.skiptest(basic3.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skiptest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.basic3@9ebe38b]" started-at="2024-11-14T12:39:12 IST" name="teardown" finished-at="2024-11-14T12:39:12 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skiptest status=SKIP method=basic3.skiptest()[pri:0, instance:sampletest.basic3@9ebe38b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- sampletest.basic3 -->
      <class name="sampletest.HomePageaTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:12 IST" name="setup" finished-at="2024-11-14T12:39:14 IST" duration-ms="2091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Varifylogo()[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:14 IST" name="Varifylogo" finished-at="2024-11-14T12:39:14 IST" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Varifylogo -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:14 IST" name="teardown" finished-at="2024-11-14T12:39:15 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Varifylogo status=SUCCESS method=HomePageaTest.Varifylogo()[pri:0, instance:sampletest.HomePageaTest@55493582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:15 IST" name="setup" finished-at="2024-11-14T12:39:16 IST" duration-ms="1856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Varifytitle()[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:16 IST" name="Varifytitle" finished-at="2024-11-14T12:39:17 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Varifytitle -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:17 IST" name="teardown" finished-at="2024-11-14T12:39:17 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Varifytitle status=SUCCESS method=HomePageaTest.Varifytitle()[pri:0, instance:sampletest.HomePageaTest@55493582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:17 IST" name="setup" finished-at="2024-11-14T12:39:19 IST" duration-ms="1915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login()[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:19 IST" name="login" finished-at="2024-11-14T12:39:35 IST" duration-ms="16824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:sampletest.HomePageaTest@55493582]" started-at="2024-11-14T12:39:35 IST" name="teardown" finished-at="2024-11-14T12:39:36 IST" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=HomePageaTest.login()[pri:0, instance:sampletest.HomePageaTest@55493582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- sampletest.HomePageaTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
